// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190801013303_base_inicial")]
    partial class base_inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Entities.OrdemDeLiberacao", b =>
                {
                    b.Property<long>("NrOrdemDeLiberacao")
                        .HasColumnName("NR_ORDEM_DE_LIBERACAO");

                    b.Property<long>("NR_REQUISICAO");

                    b.HasKey("NrOrdemDeLiberacao");

                    b.HasIndex("NR_REQUISICAO");

                    b.ToTable("TB_ORDEM_DE_LIBERACAO");
                });

            modelBuilder.Entity("DataAccess.Entities.Projeto", b =>
                {
                    b.Property<int>("CdProjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CD_PROJETO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CD_SOLUCAO");

                    b.Property<string>("DsProjeto")
                        .IsRequired()
                        .HasColumnName("DS_PROJETO");

                    b.Property<string>("NmProjeto")
                        .IsRequired()
                        .HasColumnName("NM_PROJETO");

                    b.HasKey("CdProjeto");

                    b.HasIndex("CD_SOLUCAO");

                    b.ToTable("TB_PROJETO");

                    b.HasData(
                        new
                        {
                            CdProjeto = 1,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Benefícios (Voucher)",
                            NmProjeto = "Api.Beneficios"
                        },
                        new
                        {
                            CdProjeto = 2,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Cartão",
                            NmProjeto = "Api.Cartao"
                        },
                        new
                        {
                            CdProjeto = 3,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Cliente",
                            NmProjeto = "Api.Cliente"
                        },
                        new
                        {
                            CdProjeto = 4,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Funcionário",
                            NmProjeto = "Api.Funcionario"
                        },
                        new
                        {
                            CdProjeto = 5,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Gerenciamento",
                            NmProjeto = "Api.Gerenciamento"
                        },
                        new
                        {
                            CdProjeto = 6,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Lojista",
                            NmProjeto = "Api.Lojista"
                        },
                        new
                        {
                            CdProjeto = 7,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Movimento",
                            NmProjeto = "Api.Movimento"
                        },
                        new
                        {
                            CdProjeto = 8,
                            CD_SOLUCAO = 1,
                            DsProjeto = "Api Seguranca",
                            NmProjeto = "Api.Seguranca"
                        },
                        new
                        {
                            CdProjeto = 9,
                            CD_SOLUCAO = 2,
                            DsProjeto = "Módulo Cliente",
                            NmProjeto = "SSC.Cliente"
                        },
                        new
                        {
                            CdProjeto = 10,
                            CD_SOLUCAO = 2,
                            DsProjeto = "Módulo Lojista",
                            NmProjeto = "SSC.Lojista"
                        },
                        new
                        {
                            CdProjeto = 11,
                            CD_SOLUCAO = 2,
                            DsProjeto = "Módulo Gerenciamento",
                            NmProjeto = "SSC.Gerenciamento"
                        },
                        new
                        {
                            CdProjeto = 12,
                            CD_SOLUCAO = 3,
                            DsProjeto = "Portal Cliente",
                            NmProjeto = "PortalCliente"
                        },
                        new
                        {
                            CdProjeto = 13,
                            CD_SOLUCAO = 3,
                            DsProjeto = "Portal Lojista",
                            NmProjeto = "PortalLojista"
                        },
                        new
                        {
                            CdProjeto = 14,
                            CD_SOLUCAO = 3,
                            DsProjeto = "Api pública Assistente",
                            NmProjeto = "PortalAssistente"
                        },
                        new
                        {
                            CdProjeto = 15,
                            CD_SOLUCAO = 3,
                            DsProjeto = "Api pública Benefícios",
                            NmProjeto = "PortalBeneficios"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.ProjetoAfetado", b =>
                {
                    b.Property<int>("CdProjeto")
                        .HasColumnName("CD_PROJETO");

                    b.Property<long>("NrOrdemDeLiberacao")
                        .HasColumnName("NR_ORDEM_DE_LIBERACAO");

                    b.HasKey("CdProjeto", "NrOrdemDeLiberacao");

                    b.HasIndex("NrOrdemDeLiberacao");

                    b.ToTable("TB_PROJETO_AFETADO");
                });

            modelBuilder.Entity("DataAccess.Entities.Requisicao", b =>
                {
                    b.Property<long>("NrRequisicao")
                        .HasColumnName("NR_REQUISICAO");

                    b.Property<string>("DsRequisicao")
                        .IsRequired()
                        .HasColumnName("DS_REQUISICAO");

                    b.Property<DateTime>("DtSolicitacao")
                        .HasColumnName("DT_SOLICITACAO");

                    b.Property<string>("NmSolicitante")
                        .IsRequired()
                        .HasColumnName("NM_SOLICITANTE");

                    b.HasKey("NrRequisicao");

                    b.ToTable("TB_REQUISICAO");
                });

            modelBuilder.Entity("DataAccess.Entities.Solucao", b =>
                {
                    b.Property<int>("CdSolucao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CD_SOLUCAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DsSolucao")
                        .IsRequired()
                        .HasColumnName("DS_SOLUCAO");

                    b.Property<string>("NmSolucao")
                        .IsRequired()
                        .HasColumnName("NM_SOLUCAO");

                    b.HasKey("CdSolucao");

                    b.ToTable("TB_SOLUCAO");

                    b.HasData(
                        new
                        {
                            CdSolucao = 1,
                            DsSolucao = "Api privada e batches",
                            NmSolucao = "ssc-serviços"
                        },
                        new
                        {
                            CdSolucao = 2,
                            DsSolucao = "Sistema interno da SEAC",
                            NmSolucao = "ssc-modulos"
                        },
                        new
                        {
                            CdSolucao = 3,
                            DsSolucao = "Websites e apis públicas",
                            NmSolucao = "ssc-canais"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.OrdemDeLiberacao", b =>
                {
                    b.HasOne("DataAccess.Entities.Requisicao", "Requisicao")
                        .WithMany("OrdensDeLiberacao")
                        .HasForeignKey("NR_REQUISICAO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataAccess.Entities.Projeto", b =>
                {
                    b.HasOne("DataAccess.Entities.Solucao", "Solucao")
                        .WithMany("Projetos")
                        .HasForeignKey("CD_SOLUCAO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataAccess.Entities.ProjetoAfetado", b =>
                {
                    b.HasOne("DataAccess.Entities.Projeto", "Projeto")
                        .WithMany("ProjetosAfetados")
                        .HasForeignKey("CdProjeto")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataAccess.Entities.OrdemDeLiberacao", "OrdemDeLiberacao")
                        .WithMany("ProjetosAfetados")
                        .HasForeignKey("NrOrdemDeLiberacao")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
